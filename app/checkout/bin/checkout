#!/usr/bin/env csh
#set echo

mkdir $srcDir
if ($status) then
    echo Source appears to be checked out already, so skipping for now.
    echo Instead of skipping, we should verify the source directories are clean.
    exit 0
endif
cd $srcDir
echo Using source directory = `pwd`

alias config rose config --file `dirname $0`/../rose-app.conf

# All top-level catagories are components except for
# command, defaults, env, meta
foreach comp ( `config --keys | grep -v command | grep -v defaults | grep -v env | grep -v meta` )
    echo
    echo Checking out $comp

    # Use the component root if given, otherwise use the default
    if ( { config -q $comp root } ) then
        set root = `config $comp root`
    else if ( { config -q defaults root } ) then
        set root = `config defaults root`
    else
        echo ERROR: Could not determine code base for component "$comp"
        exit 1
    endif

    # Use the component tag/version if given, otherwise use the default
    if ( { config -q $comp version } ) then
        set version = `config $comp version`
    else if ( { config -q defaults version } ) then
        set version = `config defaults version`
    else
        echo ERROR: Could not determine version for component "$comp"
        exit 1
    endif

    # Checkout the source
    foreach source ( `config $comp source` )
        echo Cloning $root/$source on branch/tag $version
    	set git = "git clone --quiet --recursive -b $version $root/$source"
        echo "> $git"
        $git
        if ( $? != 0 ) then
            echo ERROR: git checkout failed for component "$comp"
            exit 1
        endif
    end

    # Optionally run additional shell commands
    if ( { config -q $comp checkoutSh } ) then
        set sh = `config $comp checkoutSh`
        echo Running additional shell commands: $sh
        eval $sh
    endif
end

echo
echo Done!
